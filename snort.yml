site:
  name: cornify.com
  script:  http://www.cornify.com/js/rainbow.js
  date: 2011-01-26
  sniff: | 
        // Only create rainbow canvas if browser supports the canvas tag.
        var rainbowCanvas;
        function startRainbow(){
          var canvas = document.createElement('canvas');
          var isFirefox = (/firefox|minefield/i.test(navigator.userAgent));
          //isFirefox = false;
          if (!!canvas.getContext && !isFirefox) {
            rainbowCanvas = new RainbowCanvas();
            rainbowCanvas.init(canvas);
          }
        }

site:
  name: dynamat.com
  script: http://dynamat.com/trivantis.js
  date: 2011-01-26
  sniff: |
        function BrowserProps() {
          var name = navigator.appName
          
          if (name=="Netscape") name = "ns"
          else if (name=="Microsoft Internet Explorer") name = "ie"
          
          this.v = parseInt(navigator.appVersion,10)
          this.ns = (name=="ns" && this.v>=4)
          this.ns4 = (this.ns && this.v==4)
          this.ns5 = (this.ns && this.v==5)
          this.nsMac = (this.ns && navigator.platform.indexOf("Mac") >= 0 )
          this.ie = (name=="ie" && this.v>=4)
          this.ie4 = (this.ie && navigator.appVersion.indexOf('MSIE 4')>0)
          this.ie5 = (this.ie && navigator.appVersion.indexOf('MSIE 5')>0)
          this.ieMac = (this.ie && navigator.platform.indexOf("Mac") >= 0 )
          this.op = navigator.userAgent.indexOf("Opera")!=-1
          this.min = (this.ns||this.ie)
          this.Mac = (navigator.platform.indexOf("Mac") >= 0)
          this.activeX = ( this.ie ) ? true : false; 
          this.wmpVersion = 6; // default version number we only support 7 and up
          var player = null;
          try 
          {
            if(window.ActiveXObject)
              player = new ActiveXObject("WMPlayer.OCX.7");
            else if (window.GeckoActiveXObject)
              player = new GeckoActiveXObject("WMPlayer.OCX.7");
            else
              player = navigator.mimeTypes["application/x-mplayer2"].enabledPlugin;    
          }
          catch(e)
          {
            // Handle error only if title has wmp-- no WMP control
          }
          if( player && player.versionInfo ) {
            this.wmpVersion = player.versionInfo.slice(0,player.versionInfo.indexOf('.'));
          }
        }
        
        is = new BrowserProps()       
  inline: |
         if( !is.min )
           document.write( 'Your browser does not support dynamic html. Please download a current version of either <a href="http://www.microsoft.com/ie/">Microsoft Internet Explorer</a> or <a href="http://www.mozilla.com/en-US/firefox/">Mozilla Firefox </a> and try visiting our site again.  Thank You.<br /><br />' )

site:
  name: philosophy.com
  script: http://www.philosophy.com/wcsstore/RosettaStore/javascript/BrowserDetect.js
  date: 2011-01-26
  sniff: |
        var BrowserDetect = {
          init: function () {
            this.browser = this.searchString(this.dataBrowser) || "An unknown browser";
            this.version = this.searchVersion(navigator.userAgent)
              || this.searchVersion(navigator.appVersion)
              || "an unknown version";
            this.OS = this.searchString(this.dataOS) || "an unknown OS";
          },
          searchString: function (data) {
            for (var i=0;i<data.length;i++)  {
              var dataString = data[i].string;
              var dataProp = data[i].prop;
              this.versionSearchString = data[i].versionSearch || data[i].identity;
              if (dataString) {
                if (dataString.indexOf(data[i].subString) != -1)
                  return data[i].identity;
              }
              else if (dataProp)
                return data[i].identity;
            }
          },
          searchVersion: function (dataString) {
            var index = dataString.indexOf(this.versionSearchString);
            if (index == -1) return;
            return parseFloat(dataString.substring(index+this.versionSearchString.length+1));
          },
          dataBrowser: [
            {
              string: navigator.userAgent,
              subString: "Chrome",
              identity: "Chrome"
            },
            {   string: navigator.userAgent,
              subString: "OmniWeb",
              versionSearch: "OmniWeb/",
              identity: "OmniWeb"
            },
            {
              string: navigator.vendor,
              subString: "Apple",
              identity: "Safari",
              versionSearch: "Version"
            },
            {
              prop: window.opera,
              identity: "Opera"
            },
            {
              string: navigator.vendor,
              subString: "iCab",
              identity: "iCab"
            },
            {
              string: navigator.vendor,
              subString: "KDE",
              identity: "Konqueror"
            },
            {
              string: navigator.userAgent,
              subString: "Firefox",
              identity: "Firefox"
            },
            {
              string: navigator.vendor,
              subString: "Camino",
              identity: "Camino"
            },
            {    // for newer Netscapes (6+)
              string: navigator.userAgent,
              subString: "Netscape",
              identity: "Netscape"
            },
            {
              string: navigator.userAgent,
              subString: "MSIE",
              identity: "Explorer",
              versionSearch: "MSIE"
            },
            {
              string: navigator.userAgent,
              subString: "Gecko",
              identity: "Mozilla",
              versionSearch: "rv"
            },
            {     // for older Netscapes (4-)
              string: navigator.userAgent,
              subString: "Mozilla",
              identity: "Netscape",
              versionSearch: "Mozilla"
            }
          ],
          dataOS : [
            {
                 string: navigator.userAgent,
                 subString: "iPhone",
                 identity: "iPhone"
              },
              {
                  string: navigator.userAgent,
                  subString: "iPad",
                  identity: "iPad"
              },
            {
              string: navigator.platform,
              subString: "Win",
              identity: "Windows"
            },
            {
              string: navigator.platform,
              subString: "Mac",
              identity: "Mac"
            },
            {
                string: navigator.platform,
                subString: "Linux",
                identity: "Linux"
            }
          ]
        
        };
        BrowserDetect.init();
        
        if(BrowserDetect.OS == 'Windows'){
          if(BrowserDetect.browser == 'Explorer'){
            if(BrowserDetect.version >= 7){
              //Browser Supported
              document.writeln('<div id="supported_browser" value="true" style="display:none;">\n<\/div>');
            }
            else{
              //Browser not supported
              document.writeln('<div id="supported_browser" value="false" style="display:none;">\n<\/div>');
            }
          }
          else if(BrowserDetect.browser == 'Firefox'){
            if(BrowserDetect.version >= 3){
              //Browser Supported
              document.writeln('<div id="supported_browser" value="true" style="display:none;">\n<\/div>');
            }
            else{
              //Browser not supported
              document.writeln('<div id="supported_browser" value="false" style="display:none;">\n<\/div>');
            }
          }
          else if(BrowserDetect.browser == 'Chrome'){
            if(BrowserDetect.version >= 3){
              //Browser Supported
              document.writeln('<div id="supported_browser" value="flase" style="display:none;">\n<\/div>');
            }    
            else{
              //Browser not supported
              document.writeln('<div id="supported_browser" value="false" style="display:none;">\n<\/div>');
            }
          }
          else{
              //Browser not supported
              document.writeln('<div id="supported_browser" value="false" style="display:none;">\n<\/div>');
          }
        }
        else if(BrowserDetect.OS == 'Mac'){
          if(BrowserDetect.browser == 'Safari'){
            if(BrowserDetect.version >= 4){
              //Browser Supported
              document.writeln('<div id="supported_browser" value="true" style="display:none;">\n<\/div>');      
            }
            else{
              //Browser not supported
              document.writeln('<div id="supported_browser" value="false" style="display:none;">\n<\/div>');
            }
          }
          else if(BrowserDetect.browser == 'Firefox'){
            if(BrowserDetect.version >= 3){
              //Browser Supported
              document.writeln('<div id="supported_browser" value="true" style="display:none;">\n<\/div>');
            }    
            else{
              //Browser not supported
              document.writeln('<div id="supported_browser" value="false" style="display:none;">\n<\/div>');
            }
          }
          else if(BrowserDetect.browser == 'Chrome'){
            if(BrowserDetect.version >= 3){
              //Browser Supported
              document.writeln('<div id="supported_browser" value="true" style="display:none;">\n<\/div>');
            }    
            else{
              //Browser not supported
              document.writeln('<div id="supported_browser" value="false" style="display:none;">\n<\/div>');
            }
          }
          else{
              //Browser not supported
              document.writeln('<div id="supported_browser" value="false" style="display:none;">\n<\/div>');
          }
        }
        else if((BrowserDetect.OS == 'iPhone') || (BrowserDetect.OS == 'iPad') || (BrowserDetect.OS == 'iPod')){
          if(BrowserDetect.browser == 'Safari'){
            if(BrowserDetect.version >= 4){
              //Browser Supported
              document.writeln('<div id="supported_browser" value="true" style="display:none;">\n<\/div>');      
            }
            else{
              //Browser not supported
              document.writeln('<div id="supported_browser" value="false" style="display:none;">\n<\/div>');
            }
          }
        }
        else{
              //Browser not supported
              document.writeln('<div id="supported_browser" value="false" style="display:none;">\n<\/div>');
        }

site:
  name: github.com
  script:  https://github.com/404
  date: 2011-01-27
  sniff: | 
        // Detect if the browser is IE or not.
        // If it is not IE, we assume that the browser is NS.
        var IE = document.all?true:false;
        
        // If NS -- that is, !IE -- then set up for mouse capture
        if (!IE) document.captureEvents(Event.MOUSEMOVE);

site:
  name: github.com/keithclark/selectivizr
  script: https://github.com/keithclark/selectivizr/blob/cb49ce2ca23d2f61626af3676b6236b61f320f40/selectivizr.js
  date: 2011-01-31
  sniff: |
       var ieVersion = /MSIE ([\d])/.exec(navigator.userAgent)[1];
       
       // If were not in standards mode, IE is too old / new or we can't create
       // an XMLHttpRequest object then we should get out now.
       if (doc.compatMode != 'CSS1Compat' || ieVersion<6 || ieVersion>8 || !xhr) {
            return
       }
       
site:
  name: vid.ly
  script: http://m.vid.ly/js/html5.js
  date: 2011-02-01
  sniff: |
       hasQiucktime : function () {
           ua = navigator.userAgent;
           version = parseInt(ua.substr(ua.indexOf('Version')).split(" ").shift().split("/").pop());
           return (ua.indexOf('Safari') != -1 && ua.indexOf('iPhone')==-1  &&  ua.indexOf('iPad') == -1 && ua.indexOf('iPod') == -1 && ua.indexOf("Chrome") == -1 && version < 5); 
         },
       hasVideo : function () {
         return (this.hasPlayType() || this.isMobileOSX());
       },
       isIe : function () {
         ua = navigator.userAgent;
         return (ua.indexOf('MSIE') != -1 && ua.indexOf('Opera') == -1);
       }
       
site:
  name: vid.ly
  script: http://vid.ly/templates/js/video.js
  date: 2011-02-01
  sniff: |
       // Browser & Device Checks
       VideoJS.isIE = function(){ return !+"\v1"; };
       VideoJS.isIPad = function(){ return navigator.userAgent.match(/iPad/i) !== null; };
       VideoJS.isIPhone = function(){ return navigator.userAgent.match(/iPhone/i) !== null; };
       VideoJS.isIOS = function(){ return VideoJS.isIPhone() || VideoJS.isIPad(); };
       VideoJS.iOSVersion = function() {
         var match = navigator.userAgent.match(/OS (\d+)_/i);
         if (match && match[1]) { return match[1]; }
       };
       VideoJS.isAndroid = function(){ return navigator.userAgent.match(/Android/i) !== null; };
       VideoJS.androidVersion = function() {
         var match = navigator.userAgent.match(/Android (\d+)\./i);
         if (match && match[1]) { return match[1]; }
       };
       
site: 
  name: www.assetmanagement.hsbc.com
  script: http://www.assetmanagement.hsbc.com/gam/control/js/browser_detect.js
  date: 2011-02-02
  sniff: |
       // JavaScript Document
       var browserName=navigator.appName; 
       if (browserName=="Netscape")
       { 
       
       }
       else 
       { 
        if (browserName=="Microsoft Internet Explorer")
        {
        
           var browserVer=parseInt(navigator.appVersion); 
           
         var ua = navigator.userAgent;
         var re = new RegExp("MSIE ([0-9]{1,}[\.0-9]{0,})");
         if (re.exec(ua) != null) {
           rv = parseFloat( RegExp.$1 );
           
            if(rv == 6) {
             document.write('<link href="/gam/control/css/browsers/amg_ie6.css" rel="stylesheet" type="text/css" />'); 
           } 
            if(rv == 7) {
               document.write('<link href="/gam/control/css/browsers/amg_ie7.css" rel="stylesheet" type="text/css" />');
           }     
           /* if(rv == 8) {
              document.getElementById("ie").href = "amg_ie8.css";
            }*/
            
         }  
        }
        else
         {
           alert("JS Error");
          }
       }

site:
  name: http://kaazing.me/
  script: http://xmpp.kaazing.me/html5/ByteSocket.js
  date: 02-07-2011
  sniff: |
       var browser=null;
       if(typeof (ActiveXObject)!="undefined"){
       browser="ie";
       }else{
       if(typeof (window.addEventStream)==="function"){
       browser="opera";
       }else{
       if(navigator.vendor.indexOf("Apple")!=-1){
       browser="safari";
       }else{
       if(navigator.vendor.indexOf("Google")!=-1){
       browser="chrome";
       }else{
       if(navigator.product=="Gecko"&&window.find&&!navigator.savePreferences){
       browser="firefox";
       }else{
       throw new Error("couldn't detect browser");
       }
       }
       }
       }
       }

site:
  name: www.ultimate-guitar.com
  script: http://www.ultimate-guitar.com/hostPageScript.js
  date: 02-08-2011
  sniff: |
    // ********** The final criteria for takeover redirect
    // ********** this function checks browser and OS version, excluding Mac, up to Win95 and anything other than IE4+
    
    function TakeOverOk() {
        var agt=navigator.userAgent.toLowerCase();
        var intMajor = parseInt(navigator.appVersion);
    
        var bIE    = ((agt.indexOf("msie") != -1) && (agt.indexOf("opera") == -1));
        var bIE3    = (bIE && (intMajor < 4));
        var bIE4    = (bIE && (intMajor == 4) && (agt.indexOf("msie 4")!=-1) );
        var bIE4up  = (bIE && (intMajor >= 4));
        var bWin   = ( (agt.indexOf("win")!=-1) || (agt.indexOf("16bit")!=-1) );
        var bWin95 = ((agt.indexOf("win95")!=-1) || (agt.indexOf("windows 95")!=-1));
        var bWin31 = ((agt.indexOf("windows 3.1")!=-1) || (agt.indexOf("win16")!=-1) ||
                            (agt.indexOf("windows 16-bit")!=-1));
        var b95over = (!(bWin95 || bWin31) && bWin)
    
        var bGTG = (bWin && bIE4up && b95over );
    
    return bGTG
    
    }

site: 
  name: www.copaair.com
  script: http://www.copaair.com/_layouts/1033/init.js?rev=yOq8IoAABYCtaZjMVrjxtg%3D%3D
  date: 03-02-2011
  sniff: |
       function Browseris () {
         var agt=navigator.userAgent.toLowerCase();
         this.osver=1.0;
         if (agt)
         {
           var stOSVer=agt.substring(agt.indexOf("windows ")+11);
           this.osver=parseFloat(stOSVer);
         }
         this.major=parseInt(navigator.appVersion);
         this.nav=((agt.indexOf('mozilla')!=-1)&&((agt.indexOf('spoofer')==-1) && (agt.indexOf('compatible')==-1)));
         this.nav6=this.nav && (this.major==5);
         this.nav6up=this.nav && (this.major >=5);
         this.nav7up=false;
         if (this.nav6up)
         {
           var navIdx=agt.indexOf("netscape/");
           if (navIdx >=0 )
             this.nav7up=parseInt(agt.substring(navIdx+9)) >=7;
         }
         this.ie=(agt.indexOf("msie")!=-1);
         this.aol=this.ie && agt.indexOf(" aol ")!=-1;
         if (this.ie)
           {
           var stIEVer=agt.substring(agt.indexOf("msie ")+5);
           this.iever=parseInt(stIEVer);
           this.verIEFull=parseFloat(stIEVer);
           }
         else
           this.iever=0;
         this.ie4up=this.ie && (this.major >=4);
         this.ie5up=this.ie && (this.iever >=5);
         this.ie55up=this.ie && (this.verIEFull >=5.5);
         this.ie6up=this.ie && (this.iever >=6);
         this.winnt=((agt.indexOf("winnt")!=-1)||(agt.indexOf("windows nt")!=-1));
         this.win32=((this.major >=4) && (navigator.platform=="Win32")) ||
           (agt.indexOf("win32")!=-1) || (agt.indexOf("32bit")!=-1);
         this.mac=(agt.indexOf("mac")!=-1);
         this.w3c=this.nav6up;
         this.safari=(agt.indexOf("safari")!=-1);
         this.safari125up=false;
         if (this.safari && this.major >=5)
         {
           var navIdx=agt.indexOf("safari/");
           if (navIdx >=0)
             this.safari125up=parseInt(agt.substring(navIdx+7)) >=125;
         }
       }
       var browseris=new Browseris();
       var bis=browseris;
       
site:
  name: http://www.whatbrowser.org/
  script: http://www.whatbrowser.org/en/browser.js
  date: 03-07-2011
  sniff: |
        var browser = {
          set: {
            
            "google_chrome": {
              name: "Google Chrome",
              match: /Chrome\/(1?[0-9])?\..*? Safari/,
              instruction: "google_chrome",
              releases: {
                "1": {date: "released September 2008 ", version: "1", notes: ''},
                "2": {date: "released May 2009 ", version: "2", notes: ''},
                "3": {date: "released September 2009 ", version: "3", notes: ''},
                "4": {date: "released January 2010 ", version: "4", notes: ''},
                "6": {date: "released May 2010 ", version: "6", notes: ''},
                "5": {date: "released May 2010 ", version: "5", notes: ''},
                "6": {date: "released September 2010 ", version: "6", notes: ''},
                "6": {date: "released September 2010 ", version: "6", notes: ''},
                "7": {date: "released September 2010 ", version: "7", notes: ''},
                "8": {date: "released October 2010 ", version: "8", notes: ''},
                "9": {date: "released October 2010 ", version: "9", notes: ''},
                "11": {date: "released February 2011 ", version: "11", notes: ''},
                "10": {date: "released January 2011 ", version: "10", notes: ''},
                "12": {date: "released March 2011 ", version: "12", notes: ''},
                "13": {date: "released April 2011 ", version: "13", notes: ''}
              }
            },
            
            "internet_explorer_8": {
              name: "Internet Explorer",
              match: /MSIE ([8])\..*;|MSIE ([7])\.[0-9.]*;.*Trident.*/,
              instruction: "internet_explorer_8",
              releases: {
                "8": {date: "released March 2009 ", version: "8", notes: ''},
                "9": {date: "released November 2010 ", version: "9", notes: ''}
              }
            },
            
            "internet_explorer_7": {
              name: "Internet Explorer",
              match: /MSIE ([7])\..*;/,
              instruction: "internet_explorer_7",
              releases: {
                "7": {date: "released October 2006 ", version: "7", notes: ''}
              }
            },
            
            "internet_explorer_legacy": {
              name: "Internet Explorer",
              match: /MSIE ([0-6])\..*;/,
              instruction: "internet_explorer_legacy",
              releases: {
                "6": {date: "released August 2001 ", version: "6", notes: ''},
                "5": {date: "released March 1999 ", version: "5", notes: ''}
              }
            },
            
            "firefox": {
              name: "Firefox",
              match: /Firefox\/([1-9](?:\.[0-9])?).*/,
              instruction: "firefox",
              releases: {
                "1": {date: "released November 2004 ", version: "1", notes: ''},
                "2": {date: "released October 2006 ", version: "2", notes: ''},
                "3": {date: "released June 2008 ", version: "3", notes: ''},
                "3.5": {date: "released July 2009 ", version: "3.5", notes: ''},
                "3.6": {date: "released January 2010 ", version: "3.6", notes: ''},
                "4.0": {date: "released January 2011 ", version: "4", notes: ''}
              }
            },
            
            "opera_legacy": {
              name: "Opera",
              match: /Opera\/([0-8][0-9]?)\..*?|Opera\/([0-9])\.[0-7].*?/,
              instruction: "opera_legacy",
              releases: {
                "9": {date: "released June 2006 ", version: "9", notes: ''},
                "7": {date: "released January 2003 ", version: "7", notes: ''},
                "6": {date: "released December 2001 ", version: "6", notes: ''},
                "8": {date: "released April 2005 ", version: "8", notes: ''},
                "9.51": {date: "", version: "9.51", notes: ''},
                "9.52": {date: "", version: "9.52", notes: ''},
                "9.60": {date: "", version: "9.6", notes: ''},
                "9.80": {date: "", version: "9.80", notes: ''}
              }
            },
            
            "safari": {
              name: "Safari",
              match: /Version\/([0-9])\..*? Safari/,
              instruction: "safari",
              releases: {
                "3": {date: "released June 2007 ", version: "3", notes: ''},
                "4": {date: "released June 2009 ", version: "4", notes: ''},
                "5": {date: "released June 2010 ", version: "5", notes: ''}
              }
            },
            
            "safari_legacy": {
              name: "Safari",
              match: /Safari\/([34]1)/,
              instruction: "safari_legacy",
              releases: {
                "41": {date: "released April 2005 ", version: "2", notes: ''},
                "31": {date: "released June 2003 ", version: "1", notes: ''}
              }
            },
            
            "opera": {
              name: "Opera",
              match: /Opera\/[0-9]{1,2}\..*?Version\/([0-9]{1,2}\.[0-9]{1,2}).*?/,
              instruction: "opera",
              releases: {
                "10.51": {date: "released March 2010 ", version: "10.51", notes: ''},
                "10.10": {date: "released November 2009 ", version: "10.10", notes: ''},
                "10.60": {date: "released June 2010 ", version: "10.6", notes: ''},
                "10.52": {date: "released April 2010 ", version: "10.52", notes: ''},
                "10.00": {date: "released September 2009 ", version: "10.00", notes: ''},
                "10.50": {date: "released March 2010 ", version: "10.50", notes: ''},
                "10.53": {date: "released April 2010 ", version: "10.53", notes: ''},
                "10.60": {date: "released June 2010 ", version: "10.6", notes: ''},
                "10.63": {date: "released October 2010 ", version: "10.63", notes: ''},
                "11": {date: "released October 2010 ", version: "11", notes: ''},
                "9.52": {date: "", version: "9.52", notes: ''},
                "9.8": {date: "", version: "9.8", notes: ''},
                "9.51": {date: "", version: "9.51", notes: ''},
                "9.60": {date: "", version: "9.60", notes: ''},
                "11.01": {date: "released January 2011 ", version: "11", notes: ''}
              }
            }
            
          },
          
          platform: navigator.userAgent.match(/Macintosh/) ? 'Mac' : 'PC',
          possibilities: [
            'google_chrome',
            'internet_explorer_8',
            'internet_explorer_7',
            'internet_explorer_legacy',
            'firefox',
            'opera_legacy',
            'safari',
            'safari_legacy',
            'opera'
          ],
          
          detect: function() {
            var len = this.possibilities.length;
            for (i = 0; i < len; i++) {
              var k = this.possibilities[i];
              if (this.set.hasOwnProperty(k) && (this.set[k].version = navigator.userAgent.match(this.set[k].match))) {
                var matching = this.set[k];
                
                // hack for ie8 ACTING LIKE ie7
                if (k == 'internet_explorer_8' && !matching.version[1]) {
                  matching.version[1] = '8';
                }
                if (!matching.releases[matching.version[1]]){
                    return null;
                }
                release = matching.releases[matching.version[1]];
              matching.version = ['', release.version];
                matching.releaseDate = release.date;
                  matching.notes = release.notes;
                  
              return matching;
              }
            }
            return null;
          },
          
          error_message: function(){
              if ('None'!='None'){
                  return 'None';
              } else if ('None'!='None') {
                  return 'None';
              } else{
                  return "Sorry, we couldn't recognize your browser. The What Browser team has been notified.";
              };
          }
        };
        
site: 
  name: www.3dcontentcentral.com
  script: http://www.3dcontentcentral.com/js/base.js
  date: 03-09-2011
  sniff: |
    /*Detect of current browser like server's method*/
    eBrowserType={
        Chrome_v1:'Chrome_v1',
        Chrome_v2:'Chrome_v2',
        FF_v2:'FF_v2',
        FF_v3:'FF_v3',
        IE_v6:'IE_v6',
        IE_v7:'IE_v7',
        IE_v8:'IE_v8',
        Other:'Other'
    }
    function GetBrowserType()
    {
      var ua=navigator.userAgent.toUpperCase();
    
      if (ua.indexOf("CHROME/1.") > -1) return eBrowserType.Chrome_v1;
      if (ua.indexOf("CHROME/2.") > -1) return eBrowserType.Chrome_v2;
        if (ua.indexOf("FIREFOX/2.")>-1) return eBrowserType.FF_v2;
        if (ua.indexOf("FIREFOX/3.")>-1) return eBrowserType.FF_v3;
        if (ua.indexOf("MSIE 6.")>-1) return eBrowserType.IE_v6;
        if (ua.indexOf("MSIE 7.")>-1) return eBrowserType.IE_v7;
        if (ua.indexOf("MSIE 8.")>-1) return eBrowserType.IE_v8;
        return eBrowserType.Other;
    }

site:
  name: http://lifestream.icq.com/settings
  script: http://c.icq.com/js/header_c.js
  date: 04-19-2011
  sniff: |
    // Browser Detection
    var detect = navigator.userAgent.toLowerCase();
    var gl_os,gl_browser,gl_version,gl_total,thestring;
    
    if (checkIt('konqueror'))
    {
      gl_browser = "Konqueror";
      gl_os = "Linux";
    }
    else if (checkIt('safari')) gl_browser = "Safari"
    else if (checkIt('omniweb')) gl_browser = "OmniWeb"
    else if (checkIt('opera')) gl_browser = "Opera"
    else if (checkIt('webtv')) gl_browser = "WebTV";
    else if (checkIt('icab')) gl_browser = "iCab"
    else if (checkIt('msie')) gl_browser = "Internet Explorer"
    else if (!checkIt('compatible'))
    {
      gl_browser = "Netscape Navigator"
      gl_version = detect.charAt(8);
    }
    else gl_browser = "An unknown browser";
    
    if (!gl_version) gl_version = detect.charAt(place + thestring.length);
    
    if (!gl_os)
    {
      if (checkIt('linux')) gl_os = "Linux";
      else if (checkIt('x11')) gl_os = "Unix";
      else if (checkIt('mac')) gl_os = "Mac"
      else if (checkIt('win')) gl_os = "Windows"
      else os = "an unknown operating system";
    }
    
    function checkIt(string)
    {
      place = detect.indexOf(string) + 1;
      thestring = string;
      return place;
    }
    // End Browser Detection.
    
site:
  name: http://sapid.sourceforge.net/ssetest/
  script: (inline)
  date: 04-20-2011
  sniff: |
       /**
        * Detects which sort of SSE support to apply if to apply it at all
        * @return user agent type
        */
       var detectUAgent = function() {
           if (navigator.appName == "Opera" && -1 !== navigator.appVersion.indexOf("9.")) {
               log("Opera browser detected. " + INIT_MESSAGE);
               return 'opera';
           } else
           if (-1 !== navigator.appVersion.indexOf("AppleWebKit/5")) {
               log("Apparently, your browser supports SSE. " + INIT_MESSAGE);
               return 'webkit';
           } else
           if (navigator.appName == "Netscape" && -1 !== navigator.appVersion.indexOf("5.0")) {
               log("Your browser does not support SSE yet natively, but you can see here emulation. " + INIT_MESSAGE);
               return 'webkit';
           } else
           if (undefined !== window['EventSource']) {
               log("I'm not sure about your browser, but let's try. " + INIT_MESSAGE);
               return 'webkit';
           }  else {
               log(FAIL_MESSAGE);
               return false;
           }
       };
       
site:
  name: USPS
  script: https://sss-web.usps.com/cns/jscript/windows.js
  date: 08-12-2011
  sniff: |
    <!--
    // ----------------------------------------------------------------------------------------------------------------------------------------
    // This section contains miscellaneous browser related routines and variables.
    // You DON'T need to make any changes to this file.
    // ----------------------------------------------------------------------------------------------------------------------------------------
      
    var browserName      = "";
    var browserVersion   = "";
    var browserWidth     = 0;
    var browserHeight    = 0;
    var browserSupported = true;
    
    detectBrowser ();
    detectBrowserSize ();
    testBrowserVersion ();
    
    // ----------------------------------------------------------------------------------------------------------------------------------------
    // detects browser name and version
    // ----------------------------------------------------------------------------------------------------------------------------------------
      
    function detectBrowser ()
    {
     browserName = navigator.appName;
    
     if (navigator.userAgent.indexOf ("Opera") > -1)
     {
       browserName = "Opera";
       var index = navigator.userAgent.indexOf ("Opera");
       browserVersion = extractBrowserVersion (navigator.userAgent.substring (index + 5));
     }
     
     else if (navigator.userAgent.indexOf ("MSIE") > -1)
     {
       browserName = "Internet Explorer";
       var index = navigator.userAgent.indexOf ("MSIE");
       browserVersion = extractBrowserVersion (navigator.userAgent.substring (index + 4));
     }
     
     else if (navigator.vendor == "Netscape6" || navigator.vendor == "Netscape")
     {
       browserName = "Netscape";
       browserVersion = navigator.vendorSub;
     }
     
     else if (navigator.userAgent.indexOf ("Gecko") > -1)
     {
       browserName = "Mozilla";
       var index = navigator.userAgent.indexOf ("rv:");
       browserVersion = extractBrowserVersion (navigator.userAgent.substring (index + 3));
     }
   
     else if (navigator.appName.indexOf ("Netscape") != -1)
     {
       browserName = "Netscape";
       var index = navigator.appVersion.indexOf (" ");
       browserVersion = navigator.appVersion.substring (0, index);
     }
   }
   
   // ----------------------------------------------------------------------------------------------------------------------------------------
   // extracts browser version
   // ----------------------------------------------------------------------------------------------------------------------------------------
   
   function extractBrowserVersion (browserVersion)
   {
     browserVersion = trim (browserVersion);
   
     index = browserVersion.indexOf (";");
     if (index > -1)
       browserVersion = browserVersion.substring (0, index);
     else
     {
       index = browserVersion.indexOf (")");
       if (index > -1)
         browserVersion = browserVersion.substring (0, index);
       else
       {
         index = browserVersion.indexOf (" ");
         if (index > -1)
           browserVersion = browserVersion.substring (0, index);
       }
     }
   
     return browserVersion;
   }
   
   // ----------------------------------------------------------------------------------------------------------------------------------------
   // tests browser name and version
   // ----------------------------------------------------------------------------------------------------------------------------------------
   
   function testBrowserVersion ()
   {
     if (! ((browserName == "Internet Explorer" && browserVersion >= "4.0") ||
            (browserName == "Netscape"          && browserVersion >= "4.0") ||
            (browserName == "Mozilla"           && browserVersion >= "1.0") ||
            (browserName == "Opera"             && browserVersion >= "5.0")))
     {
       browserSupported = false;
       alert ("Warning, you are using " + browserName + " Version " + browserVersion + "\n"
         + "The recommended browsers to view this page are:\n"
         + "- Internet Explorer 4.0 or better\n"
         + "- Netscape 4.0 or better\n"
       );
     }
   }
       
site:
  name: jcpenney.com
  script: http://www.jcpenney.com/jcp/Javascript/XBase.js?Version=11172010
  date: 08-24-2011
  sniff: |
    function Browser() {
      var BrowserName;
      var usrAgent;
      var pos;
    
      this.IEBrowser    = false;
      this.MozBrowser    = false;
      this.version = null;
      this.MACOS = false;
      usrAgent = navigator.userAgent;
    
    
     //OSTest
     OSName = "Mac";
       if ((pos = usrAgent.indexOf(OSName)) >= 0) 
      {
        this.MACOS = true;
      }
    
      BrowserName = "MSIE";
      if ((pos = usrAgent.indexOf(BrowserName)) >= 0) 
      {
        this.IEBrowser = true;
        this.version = parseFloat(usrAgent.substr(pos + BrowserName.length));
        return;
      }
    
      BrowserName = "Netscape6/";
      if ((pos = usrAgent.indexOf(BrowserName)) >= 0) 
      {
        this.MozBrowser = true;
        this.version = parseFloat(usrAgent.substr(pos + BrowserName.length));
        return;
      }
    
      // Treat any other "Gecko" browser as NS 6.1.
    
      BrowserName = "Gecko";
      if ((pos = usrAgent.indexOf(BrowserName)) >= 0) 
      {
        this.MozBrowser = true;
        this.version = 6.1;
        return;
      }
    
    
    }

site:
  name: sheelapps.com
  script: http://sheelapps.com/xinha/XinhaCore.js
  date: 09-12-2011
  sniff: |
       Xinha.agt=navigator.userAgent.toLowerCase();
       Xinha.is_ie=((Xinha.agt.indexOf("msie")!=-1)&&(Xinha.agt.indexOf("opera")==-1));
       Xinha.ie_version=parseFloat(Xinha.agt.substring(Xinha.agt.indexOf("msie")+5));
       Xinha.is_opera=(Xinha.agt.indexOf("opera")!=-1);
       Xinha.opera_version=navigator.appVersion.substring(0,navigator.appVersion.indexOf(" "))*1;
       Xinha.is_khtml=(Xinha.agt.indexOf("khtml")!=-1);
       Xinha.is_safari=(Xinha.agt.indexOf("safari")!=-1);
       Xinha.is_mac=(Xinha.agt.indexOf("mac")!=-1);
       Xinha.is_mac_ie=(Xinha.is_ie&&Xinha.is_mac);
       Xinha.is_win_ie=(Xinha.is_ie&&!Xinha.is_mac);
       Xinha.is_gecko=(navigator.product=="Gecko"&&!Xinha.is_safari);
       Xinha.isRunLocally=document.URL.toLowerCase().search(/^file:/)!=-1;
       Xinha.is_designMode=(typeof document.designMode!="undefined"&&!Xinha.is_ie);
       Xinha.checkSupportedBrowser=function(){
       if(Xinha.is_gecko){
       if(navigator.productSub<20021201){
       alert("You need at least Mozilla-1.3 Alpha.\nSorry, your Gecko is not supported.");
       return false;
       }
       if(navigator.productSub<20030210){
       alert("Mozilla < 1.3 Beta is not supported!\nI'll try, though, but it might not work.");
       }
       }
       if(Xinha.is_opera){
       alert("Sorry, Opera is not yet supported by Xinha.");
       }
       return Xinha.is_gecko||(Xinha.is_opera&&Xinha.opera_version>=9.1)||Xinha.ie_version>=5.5;
       };
       Xinha.isSupportedBrowser=Xinha.checkSupportedBrowser();
       
site:
  name: pcworld.com
  script: http://ftp.pcworld.com/pub/screencams/ascii-matrix.html
  date: 09-19-2011
  sniff: |
       /******* browser detect ******/
       
       with(navigator) {
        Browser=appName;
        Version=parseInt(appVersion.charAt(0));
       } //document.write(Browser+" "+Version+" : ");

site:
  name: globo.com
  script: http://s.glbimg.com/en/hm/media/CACHE/js/31c83fbe47be.js
  date: 01-06-2012
  sniff: |
       var whoami = {
           userAgent: navigator.userAgent.toLowerCase(),
           browserPlatform: navigator.platform.toLowerCase(),
           platform: {
               name: ''
           },
           browser: {
               name: ''
           },
           modules: {
               platform: [],
               browser: []
           },
           type: {
               platform: 'platform',
               browser: 'browser'
           },
           register: function(type, module) {
               this.modules[type].push(module);
           },
           detect: function(collection, property) {
               for (var i = 0; i < collection.length; i++) {
                   collection[i].call(this);
               }
           },
           identify: function() {
               this.detect(this.modules.platform, 'platform');
               this.detect(this.modules.browser, 'browser');
           },
           setPlatformName: function(name) {
               this.platform.name = name;
               this.platform[name] = true;
           },
           helpers: {
               platform: {
                   identifyFromPlatform: function(pattern, name) {
                       var self = whoami;
                       return function() {
                           if (pattern.test(self.browserPlatform)) {
                               self.setPlatformName(name);
                           }
                       };
                   },
                   identifyFromUserAgent: function(pattern, name) {
                       var self = whoami;
                       return function() {
                           if (pattern.test(self.userAgent)) {
                               self.setPlatformName(name);
                           }
                       };
                   }
               }
           }
       };
       whoami.register(whoami.type.platform, whoami.helpers.platform.identifyFromPlatform(/mac/, 'mac'));
       whoami.register(whoami.type.platform, whoami.helpers.platform.identifyFromPlatform(/linux/, 'linux'));
       whoami.register(whoami.type.platform, whoami.helpers.platform.identifyFromPlatform(/win/, 'windows'));
       whoami.register(whoami.type.platform, whoami.helpers.platform.identifyFromUserAgent(/ipad/, 'ipad'));
       whoami.register(whoami.type.platform, whoami.helpers.platform.identifyFromUserAgent(/android/, 'android'));
       whoami.register(whoami.type.platform, whoami.helpers.platform.identifyFromUserAgent(/iphone/, 'iphone'));
       whoami.register(whoami.type.platform, whoami.helpers.platform.identifyFromUserAgent(/ipod/, 'ipod'));
       var glb = glb || {};
       glb.cookie = {
           create: function(name, value, minutes, domain) {
               if (minutes) {
                   var date = new Date();
                   date.setTime(date.getTime() + (minutes * 60 * 1000));
                   var expires = '; expires=' + date.toGMTString();
               } else {
                   var expires = '';
               }
               domain = (domain) ? '; domain=' + domain: '';
               document.cookie = name + '=' + value + expires + '; path=/' + domain;
           },
           read: function(name) {
               var nameEQ = name + '=';
               var ca = document.cookie.split(';');
               for (var i = 0; i < ca.length; i++) {
                   var c = ca[i];
                   while (c.charAt(0) == ' ') c = c.substring(1, c.length);
                   if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);
               }
               return null;
           },
           erase: function(name) {
               this.create(name, '', -1);
           }
       }; (function() {
           whoami.identify();
           var platform = whoami.platform.name;
           var isDesktop = (/^(?:mac|windows|linux|ipad)$/).test(platform);
           if (!isDesktop && !glb.cookie.read('original-page')) {
               if ((/^(?:android|iphone|ipod)$/).test(platform)) {
                   window.location = 'http://m.globo.com/touchphone/';
               } else {
                   window.location = 'http://m.globo.com/standard/';
               }
           }
       })();
       
site:
  name: http://2010.usopen.org/en_US/scores/stats/day14/1408dss.html
  script: (inline)
  date: 01/06/2012
  sniff: |
  //display old browser message
  function BrowserCheck() {
  var b = navigator.appName;
  if (b=="Netscape") this.b = "ns";
  else if (b=="Microsoft Internet Explorer") this.b = "ie";
  else if (b=="Opera") this.b = "op";
  else this.b = b;
  this.v = parseInt(navigator.appVersion);
  this.ns = (this.b=="ns" && this.v==4);
  this.ns4 = (this.b=="ns" && this.v>=4 && this.v<5);
  this.ns5 = (this.b=="ns" && this.v>=5);
  this.op = (this.b=="op" && this.v>=4);
  this.op5 = (this.b=="op" && this.v>=5);
  this.ie = (this.b=="ie" && this.v>=4);
  this.ie4 = (navigator.userAgent.indexOf('MSIE 4')>0);
  this.ie5 = (navigator.userAgent.indexOf('MSIE 5')>0);
  this.ie6 = (navigator.userAgent.indexOf('MSIE 6')>0);
  if (this.ie5) this.v = 5;
  this.min = (this.ns||this.ie);
  }
  is = new BrowserCheck();
  var isNav = false;
  var isDom = false;
  var isIE = false;
  var isOp = false;
  if (is.ns4){ isNav = true; }
  if (is.ie4 || is.ie5 || is.ie6){ isIE = true; }
  if (is.op5){ isOp = true; }
  if (is.ns5){ isDom = true; }
  if (!isIE && !isNav && !isDom){
  document.write("You need a 4.0+ browser");
  }

site: 
  name: monami (github)    
  script: https://raw.github.com/jamesgpearce/monomi/master/lib/monomi.js 
  date: 01-26-2012
  sniff: |
      var detectBrowserType = exports.detectBrowserType = function (options) {
        var opts = merge({

          'order': ['tablet', 'touch', 'mobile', 'desktop'],
          'default': 'unknown',

          'tablet': {
              'user-agent': new RegExp('ipad', 'i')
          },

          'touch': {
              'user-agent': new RegExp('iphone|android', 'i')
          },

          'mobile': {
              'order':['x-wap-profile', 'profile', 'accept', 'user-agent'],
              'x-wap-profile': new RegExp('.+'),
              'profile': new RegExp('.+'),
              'accept': new RegExp('wap', 'i'),
              'user-agent': new RegExp('^(' + [
                  'w3c ', 'w3c-', 'acs-', 'alav', 'alca', 'amoi', 'audi', 'avan', 'benq', 'bird', 'blac',
                  'blaz', 'brew', 'cell', 'cldc', 'cmd-', 'dang', 'doco', 'eric', 'hipt', 'htc_', 'inno',
                  'ipaq', 'ipod', 'jigs', 'kddi', 'keji', 'leno', 'lg-c', 'lg-d', 'lg-g', 'lge-', 'lg/u',
                  'maui', 'maxo', 'midp', 'mits', 'mmef', 'mobi', 'mot-', 'moto', 'mwbp', 'nec-', 'newt',
                  'noki', 'palm', 'pana', 'pant', 'phil', 'play', 'port', 'prox', 'qwap', 'sage', 'sams',
                  'sany', 'sch-', 'sec-', 'send', 'seri', 'sgh-', 'shar', 'sie-', 'siem', 'smal', 'smar',
                  'sony', 'sph-', 'symb', 't-mo', 'teli', 'tim-', 'tosh', 'tsm-', 'upg1', 'upsi', 'vk-v',
                  'voda', 'wap-', 'wapa', 'wapi', 'wapp', 'wapr', 'webc', 'winw', 'winw', 'xda ', 'xda-'
              ].join('|') + ')|(' + [
                  'android', 'hiptop', 'ipod', 'lge vx', 'midp', 'mmp', 'netfront', 'palm', 'psp',
                  'openweb', 'opera mobi', 'opera mini', 'phone', 'smartphone', 'symbian', 'up.browser',
                  'up.link', 'wap', 'windows ce'
              ].join('|') + ')' , 'i')
          },

          'desktop': function () {
              return true;
          }

      }, options);


      return function(request, response, next) {

          var userAgent = getHeader(request, 'user-agent'); //oft-used
          var browserType = opts['default'];

          for (var t in opts['order']) {
              var type = opts['order'][t];
              var options = opts[type];
              if (options && (
                  typeof(options)==='function' && options(request, userAgent))
                  ||
                  detect(request, userAgent, options)
              ) {
                  browserType = type;
                  break;
              }
          }
          
          request.monomi = {
              'browserType' : browserType
          };
          
          next();

      }
  }


  function detect(request, userAgent, options) {

      var opts = merge({
          'order':['user-agent']
      }, options);

      for (var h in opts['order']) {
          var header = opts['order'][h].toLowerCase();
          if (opts[header]) {
              var value = (header==='user-agent') ? userAgent : getHeader(request, header);
              if (value.match(opts[header])!=null) {
                  return true;
              }
          }
      }

      return false;
  }


  var getHeader = exports.getHeader = function(request, header, tryPrefix, defaultValue) {

      tryPrefix = typeof(tryPrefix) != 'undefined' ? tryPrefix : 'x-device-';

      var value = request.headers[tryPrefix + header];
      if (value) { return value; }

      value = request.headers[header];
      if (value) { return value; }

      return typeof(defaultValue) != 'undefined' ? defaultValue : '';
  }


  function merge() {
      var merged = {};
        for (a in arguments) {
          for (f in arguments[a]) {
              merged[f] = arguments[a][f];
          }
      }
      return merged;
  };
#site:
#  name:
#  script:
#  date:
#  sniff:
#  inline: (optional, if there's inline code calling an embedded script)
